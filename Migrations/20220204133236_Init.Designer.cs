// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrintLayer.Data;

namespace PrintLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220204133236_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrintLayer.Models.News", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6ea94bf-9441-4a96-af1d-91bcd71e0d6b"),
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(9773),
                            Description = "This is a test news description 1",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Test Name 1"
                        },
                        new
                        {
                            Id = new Guid("1557a5aa-9162-4598-972a-b484dfbe3e41"),
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 404, DateTimeKind.Utc).AddTicks(372),
                            Description = "This is a test news description 2",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Test Name 2"
                        },
                        new
                        {
                            Id = new Guid("f3c285e4-89a8-4b71-8acf-0a5797e71443"),
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 404, DateTimeKind.Utc).AddTicks(416),
                            Description = "This is a test news description 3",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Test Name 3"
                        },
                        new
                        {
                            Id = new Guid("a7fe9af6-8b1f-4d5b-8572-7a87b26f9e07"),
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 404, DateTimeKind.Utc).AddTicks(435),
                            Description = "This is a test news description 4",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Test Name 4"
                        });
                });

            modelBuilder.Entity("PrintLayer.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d79df427-4a10-48e0-9382-ee9132693636"),
                            Address = "Moscow Kremlin st 0",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(1543),
                            Description = "Sample Description 0",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("1e027204-02f9-4ee1-bd70-e714db17a24a"),
                            Address = "Moscow Kremlin st 1",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3027),
                            Description = "Sample Description 1",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("98f5e8d1-7bdb-442b-84a9-2549202733a3"),
                            Address = "Moscow Kremlin st 2",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3105),
                            Description = "Sample Description 2",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("5ae1121f-d280-4461-8ec5-264c4d3a9460"),
                            Address = "Moscow Kremlin st 3",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3126),
                            Description = "Sample Description 3",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("1be3af4e-0bb8-4e8f-bc3b-ff4c76cdb384"),
                            Address = "Moscow Kremlin st 4",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3157),
                            Description = "Sample Description 4",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("1ed74ca9-55c4-4971-a126-83909861f303"),
                            Address = "Moscow Kremlin st 5",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3178),
                            Description = "Sample Description 5",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("67322e7e-b3c0-43e1-ac73-b75a69b54022"),
                            Address = "Moscow Kremlin st 6",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3196),
                            Description = "Sample Description 6",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("89263206-80d2-4883-bdbe-4ee1f63fc576"),
                            Address = "Moscow Kremlin st 7",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3214),
                            Description = "Sample Description 7",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("9d916b83-7c21-49fa-851c-d705ba0dfe8d"),
                            Address = "Moscow Kremlin st 8",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3231),
                            Description = "Sample Description 8",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("020c70f0-66a6-48e4-bca1-e0665bea9e8e"),
                            Address = "Moscow Kremlin st 9",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3250),
                            Description = "Sample Description 9",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("9e17c12e-2bbd-4f18-9c92-842084889de2"),
                            Address = "Moscow Kremlin st 10",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3268),
                            Description = "Sample Description 10",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("fc413f24-b61f-46c3-8cbb-c144e11d369a"),
                            Address = "Moscow Kremlin st 11",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3286),
                            Description = "Sample Description 11",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("9f234fd8-15fa-45df-b4f2-503e38832808"),
                            Address = "Moscow Kremlin st 12",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3305),
                            Description = "Sample Description 12",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("4c986f86-2fbe-4904-8e06-5351373533d3"),
                            Address = "Moscow Kremlin st 13",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3323),
                            Description = "Sample Description 13",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("969db66c-b984-4215-b20b-674bcf7310ec"),
                            Address = "Moscow Kremlin st 14",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3369),
                            Description = "Sample Description 14",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("b8136ec9-0457-47ff-ac4d-409c84dec7ec"),
                            Address = "Moscow Kremlin st 15",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3391),
                            Description = "Sample Description 15",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("5e2980c6-3866-434c-b958-aa8786fbd476"),
                            Address = "Moscow Kremlin st 16",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3408),
                            Description = "Sample Description 16",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("ec78a5af-0ea4-4690-95b8-40c60e801293"),
                            Address = "Moscow Kremlin st 17",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3426),
                            Description = "Sample Description 17",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("4a22cef3-d059-422f-af00-a2c9f158e671"),
                            Address = "Moscow Kremlin st 18",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3443),
                            Description = "Sample Description 18",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        },
                        new
                        {
                            Id = new Guid("0b3f92fa-e610-408d-8d76-62e08c1d2390"),
                            Address = "Moscow Kremlin st 19",
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(3461),
                            Description = "Sample Description 19",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Phone = "+71234567890",
                            Status = 1,
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1"
                        });
                });

            modelBuilder.Entity("PrintLayer.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Grade")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a92a42ca-bc29-4985-8e1d-74b4a8dba546"),
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(5995),
                            Description = "Sample review Description 1",
                            Grade = (byte)1,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1",
                            UserName = "Admin Admin"
                        },
                        new
                        {
                            Id = new Guid("428c0eb4-adca-410b-8978-698c29acba45"),
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(7182),
                            Description = "Sample review Description 2",
                            Grade = (byte)2,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1",
                            UserName = "Admin Admin"
                        },
                        new
                        {
                            Id = new Guid("bcb8353f-cc02-4593-b648-ceaa92be35d8"),
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(7277),
                            Description = "Sample review Description 3",
                            Grade = (byte)3,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1",
                            UserName = "Admin Admin"
                        },
                        new
                        {
                            Id = new Guid("4d05a212-8afe-4e99-a331-e8bfa0a1c472"),
                            CreatedDate = new DateTime(2022, 2, 4, 13, 32, 25, 403, DateTimeKind.Utc).AddTicks(7299),
                            Description = "Sample review Description 4",
                            Grade = (byte)4,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1",
                            UserName = "Admin Admin"
                        });
                });

            modelBuilder.Entity("PrintLayer.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "01b2b81c-50ba-4364-9a06-2c1aaa5338a1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fac287d1-61e8-49ff-8ad9-3c3040a18ec8",
                            Email = "admin",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "a322b9c0b8e19ef16d4d308cd4e1222106d0edf8fbb3c8f1649242dff54a740c",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a3a2c0fe-3e31-4aee-a2f4-1a3c05fa1de4",
                            TwoFactorEnabled = false,
                            UserName = "Admin Admin"
                        });
                });

            modelBuilder.Entity("PrintLayer.Models.Order", b =>
                {
                    b.HasOne("PrintLayer.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PrintLayer.Models.Review", b =>
                {
                    b.HasOne("PrintLayer.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
